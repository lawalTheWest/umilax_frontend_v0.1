name: EAS Build (production) - frontend

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: frontend-umilax
        run: |
          if [ -f package-lock.json ]; then
            echo "Found package-lock.json — running npm ci"
            npm ci
          else
            echo "No package-lock.json found — running npm install to generate lockfile"
            npm install
          fi

      - name: Install EAS CLI and jq
        run: |
          npm install -g eas-cli
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Run EAS build, fetch artifact, and publish to GitHub Release
        working-directory: frontend-umilax
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          echo "whoami:" && eas whoami

          echo "Starting EAS build (non-interactive)..."
          eas build --platform android --profile production --non-interactive || true

          echo "Waiting for a finished build and fetching artifact URL..."
          ARTIFACT_URL=""
          for i in $(seq 1 30); do
            echo "polling attempt $i..."
            builds_json=$(eas build:list --platform android --limit 10 --non-interactive --json || true)
            ARTIFACT_URL=$(echo "$builds_json" | jq -r '.[] | select(.status=="finished") | .artifacts[]?.url' | head -n1 || true)
            if [ -n "$ARTIFACT_URL" ] && [ "$ARTIFACT_URL" != "null" ]; then
              echo "found artifact: $ARTIFACT_URL"
              break
            fi
            echo "no finished artifact yet, sleeping 10s..."
            sleep 10
          done

          if [ -z "$ARTIFACT_URL" ] || [ "$ARTIFACT_URL" = "null" ]; then
            echo "ERROR: no finished artifact found after polling. Dumping builds list:" >&2
            echo "$builds_json" | jq '.' >&2 || true
            exit 1
          fi

          mkdir -p build_artifacts
          filename="app-$(date +%s).apk"
          echo "Downloading artifact to build_artifacts/$filename..."
          curl -L "$ARTIFACT_URL" -o "build_artifacts/$filename"

          echo "Creating GitHub release and uploading asset..."
          tag="eas-build-${{ github.run_id }}"
          name="EAS build ${{ github.run_number }} ($tag)"

          release_response=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/releases -d "{\"tag_name\": \"$tag\", \"name\": \"$name\", \"body\": \"EAS build artifact\"}")
          upload_url=$(echo "$release_response" | jq -r .upload_url | sed -e 's/{?name,label}//')

          if [ -z "$upload_url" ] || [ "$upload_url" = "null" ]; then
            echo "ERROR: could not determine release upload_url" >&2
            echo "$release_response" | jq '.' >&2 || true
            exit 1
          fi

          echo "Uploading asset to release..."
          curl --fail -X POST -H "Authorization: token $GITHUB_TOKEN" -H "Content-Type: application/vnd.android.package-archive" \
            --data-binary @"build_artifacts/$filename" "$upload_url?name=$filename"

          echo "Upload complete. Release available at: https://github.com/${{ github.repository }}/releases/tag/$tag"
